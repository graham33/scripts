#!/usr/bin/env bash

set -e

PRIMARY_DISPLAY=eDP-1
EXT_CENTRE=DP-2-1
EXT_LEFT=DP-2-2

function display_connected {
    xrandr | grep "$1 connected" >/dev/null
}

function display_monitor_active {
    xrandr --listactivemonitors| grep "[\+\*]$1 " >/dev/null
}

if ! ( display_connected $PRIMARY_DISPLAY \
          && display_connected $EXT_CENTRE \
          && display_connected $EXT_LEFT )
then
    echo Not all displays are connected >&2
    exit 1
fi

primary_inactive=
if display_monitor_active $PRIMARY_DISPLAY
then
    echo Primary display $PRIMARY_DISPLAY active
else
    echo Primary display $PRIMARY_DISPLAY inactive
    primary_inactive=1
fi

ext_inactive=
if display_monitor_active $EXT_CENTRE && display_monitor_active $EXT_LEFT
then
    echo External displays active
else
    echo Some external displays inactive
    ext_inactive=1
fi

function activate_primary {
    xrandr --output $PRIMARY_DISPLAY --auto
}

function activate_ext {
    xrandr --output $EXT_CENTRE --auto --output $EXT_LEFT --auto --left-of $EXT_CENTRE --rotate left
}

function deactivate_primary {
    xrandr --output $PRIMARY_DISPLAY --off
}

function deactivate_ext {
    xrandr --output $EXT_LEFT --off
    xrandr --output $EXT_CENTRE --off
}

function check {
    read -p "$1 " -n 1 -r REPLY
    echo    # move to a new line
    [[ "$REPLY" =~ ^[Yy]$ ]]
}

# toggle
if [ ! -z "$primary_inactive" ]
then
    # if primary is inactive, assume we want it back, and then ext off
    activate_primary
    if check "OK to deactivate ext?"
    then
        deactivate_ext
    fi
elif [ ! -z "$ext_inactive" ]
then
     # else if ext is inactive, assume we want all of them active, and then primary off
     activate_ext
     if check "OK to deactivate primary?"
     then
         deactivate_primary
     fi
else
    # else everything is active, assume we want primary only
    activate_primary
    if check "OK to deactivate ext?"
    then
        deactivate_ext
    fi
fi
